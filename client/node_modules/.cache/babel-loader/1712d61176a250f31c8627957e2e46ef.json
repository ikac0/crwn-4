{"ast":null,"code":"import _classCallCheck from \"/Users/krsteski/Desktop/crown-clothing-windows-189/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krsteski/Desktop/crown-clothing-windows-189/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krsteski/Desktop/crown-clothing-windows-189/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krsteski/Desktop/crown-clothing-windows-189/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krsteski/Desktop/crown-clothing-windows-189/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\nimport { assert } from 'workbox-core/_private/assert.mjs';\nimport { logger } from 'workbox-core/_private/logger.mjs';\nimport { Route } from './Route.mjs';\nimport './_version.mjs';\n/**\n * NavigationRoute makes it easy to create a [Route]{@link\n * workbox.routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `blacklist` and `whitelist` parameters.\n *\n * @memberof workbox.routing\n * @extends workbox.routing.Route\n */\n\nvar NavigationRoute = /*#__PURE__*/function (_Route) {\n  _inherits(NavigationRoute, _Route);\n\n  /**\n   * If both `blacklist` and `whiltelist` are provided, the `blacklist` will\n   * take precedence and the request will not match this route.\n   *\n   * The regular expressions in `whitelist` and `blacklist`\n   * are matched against the concatenated\n   * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n   * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n   * portions of the requested URL.\n   *\n   * @param {workbox.routing.Route~handlerCallback} handler A callback\n   * function that returns a Promise resulting in a Response.\n   * @param {Object} options\n   * @param {Array<RegExp>} [options.blacklist] If any of these patterns match,\n   * the route will not handle the request (even if a whitelist RegExp matches).\n   * @param {Array<RegExp>} [options.whitelist=[/./]] If any of these patterns\n   * match the URL's pathname and search parameter, the route will handle the\n   * request (assuming the blacklist doesn't match).\n   */\n  function NavigationRoute(handler) {\n    var _this;\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$whitelist = _ref.whitelist,\n        whitelist = _ref$whitelist === void 0 ? [/./] : _ref$whitelist,\n        _ref$blacklist = _ref.blacklist,\n        blacklist = _ref$blacklist === void 0 ? [] : _ref$blacklist;\n\n    _classCallCheck(this, NavigationRoute);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isArrayOfClass(whitelist, RegExp, {\n        moduleName: 'workbox-routing',\n        className: 'NavigationRoute',\n        funcName: 'constructor',\n        paramName: 'options.whitelist'\n      });\n      assert.isArrayOfClass(blacklist, RegExp, {\n        moduleName: 'workbox-routing',\n        className: 'NavigationRoute',\n        funcName: 'constructor',\n        paramName: 'options.blacklist'\n      });\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NavigationRoute).call(this, function () {\n      var _this2;\n\n      return (_this2 = _this)._match.apply(_this2, arguments);\n    }, handler));\n    _this._whitelist = whitelist;\n    _this._blacklist = blacklist;\n    return _this;\n  }\n  /**\n   * Routes match handler.\n   *\n   * @param {Object} options\n   * @param {FetchEvent} options.event\n   * @param {URL} options.url\n   * @return {boolean}\n   *\n   * @private\n   */\n\n\n  _createClass(NavigationRoute, [{\n    key: \"_match\",\n    value: function _match(_ref2) {\n      var event = _ref2.event,\n          url = _ref2.url;\n\n      if (event.request.mode !== 'navigate') {\n        return false;\n      }\n\n      var pathnameAndSearch = url.pathname + url.search;\n\n      if (this._blacklist.some(function (regExp) {\n        return regExp.test(pathnameAndSearch);\n      })) {\n        if (process.env.NODE_ENV !== 'production') {\n          logger.debug(\"The navigation route is not being used, since the \" + \"request URL matches both the whitelist and blacklist.\");\n        }\n\n        return false;\n      }\n\n      if (this._whitelist.some(function (regExp) {\n        return regExp.test(pathnameAndSearch);\n      })) {\n        if (process.env.NODE_ENV !== 'production') {\n          logger.debug(\"The navigation route is being used.\");\n        }\n\n        return true;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          logger.debug(\"The navigation route is not being used, since the \" + \"URL being navigated to doesn't match the whitelist.\");\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return NavigationRoute;\n}(Route);\n\nexport { NavigationRoute };","map":null,"metadata":{},"sourceType":"module"}