{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from \"lodash.memoize\";\n\nvar selectShop = function selectShop(state) {\n  return state.shop;\n};\n\nexport var selectCollections = createSelector([selectShop], function (shop) {\n  return shop.collections;\n});\nexport var selectCollectionsForPreview = createSelector([selectCollections], function (collections) {\n  return collections ? Object.keys(collections).map(function (key) {\n    return collections[key];\n  }) : [];\n} //mapping through object with the key:value search, since we can't map through array now, since its nonexistent, and we changed it to an object. at the shop.data. and we re-used it to place the shopdata into our firestore\n);\nexport var selectCollection = memoize(function (collectionUrlParam) {\n  return createSelector([selectCollections], function (collections) {\n    return collections ? collections[collectionUrlParam] : null;\n  });\n});\nexport var selectIsCollectionFetching = createSelector([selectShop], function (shop) {\n  return shop.isFetching;\n});\nexport var selectIsCollectionsLoaded = createSelector([selectShop], function (shop) {\n  return !!shop.collections;\n});","map":{"version":3,"sources":["/Users/krsteski/Desktop/react/e-store-full-stack/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAjB;AAAA,CAAnB;;AAEA,OAAO,IAAMC,iBAAiB,GAAGL,cAAc,CAC7C,CAACE,UAAD,CAD6C,EAE7C,UAACE,IAAD;AAAA,SAAUA,IAAI,CAACE,WAAf;AAAA,CAF6C,CAAxC;AAKP,OAAO,IAAMC,2BAA2B,GAAGP,cAAc,CACvD,CAACK,iBAAD,CADuD,EAEvD,UAACC,WAAD;AAAA,SACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,UAACC,GAAD;AAAA,WAASL,WAAW,CAACK,GAAD,CAApB;AAAA,GAA7B,CAAH,GAA6D,EAD1E;AAAA,CAFuD,CAGsB;AAHtB,CAAlD;AAMP,OAAO,IAAMC,gBAAgB,GAAGX,OAAO,CAAC,UAACY,kBAAD;AAAA,SACtCb,cAAc,CAAC,CAACK,iBAAD,CAAD,EAAsB,UAACC,WAAD;AAAA,WAClCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADd;AAAA,GAAtB,CADwB;AAAA,CAAD,CAAhC;AAMP,OAAO,IAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACE,UAAD,CADsD,EAEtD,UAACE,IAAD;AAAA,SAAUA,IAAI,CAACW,UAAf;AAAA,CAFsD,CAAjD;AAKP,OAAO,IAAMC,yBAAyB,GAAGhB,cAAc,CACrD,CAACE,UAAD,CADqD,EAErD,UAACE,IAAD;AAAA,SAAU,CAAC,CAACA,IAAI,CAACE,WAAjB;AAAA,CAFqD,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nimport memoize from \"lodash.memoize\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : [] //mapping through object with the key:value search, since we can't map through array now, since its nonexistent, and we changed it to an object. at the shop.data. and we re-used it to place the shopdata into our firestore\r\n);\r\n\r\nexport const selectCollection = memoize((collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  )\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n"]},"metadata":{},"sourceType":"module"}