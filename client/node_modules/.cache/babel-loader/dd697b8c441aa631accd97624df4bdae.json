{"ast":null,"code":"/*\n  Copyright 2017 Google Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      https://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\nimport { logger } from 'workbox-core/_private/logger.mjs';\nimport '../_version.mjs';\n/**\n * @param {string} groupTitle\n * @param {Array<PrecacheEntry>} entries\n *\n * @private\n */\n\nvar _nestedGroup = function _nestedGroup(groupTitle, entries) {\n  if (entries.length === 0) {\n    return;\n  }\n\n  logger.groupCollapsed(groupTitle);\n  entries.forEach(function (entry) {\n    logger.log(entry._originalInput);\n  });\n  logger.groupEnd();\n};\n/**\n * @param {Array<Object>} entriesToPrecache\n * @param {Array<Object>} alreadyPrecachedEntries\n *\n * @private\n * @memberof module:workbox-precachig\n */\n\n\nexport default (function (entriesToPrecache, alreadyPrecachedEntries) {\n  // Goal is to print the message:\n  //    Precaching X files.\n  // Or:\n  //    Precaching X files. Y files were cached and up-to-date.\n  var precachedCount = entriesToPrecache.length;\n  var alreadyPrecachedCount = alreadyPrecachedEntries.length;\n  var printText = \"Precaching \".concat(precachedCount, \" file\").concat(precachedCount === 1 ? '' : 's', \".\");\n\n  if (alreadyPrecachedCount > 0) {\n    printText += \" \".concat(alreadyPrecachedCount, \" \") + \"file\".concat(alreadyPrecachedCount === 1 ? ' is' : 's are', \" already cached.\");\n  }\n\n  logger.groupCollapsed(printText);\n\n  _nestedGroup(\"View precached URLs.\", entriesToPrecache);\n\n  _nestedGroup(\"View URLs that were already precached.\", alreadyPrecachedEntries);\n\n  logger.groupEnd();\n});","map":null,"metadata":{},"sourceType":"module"}